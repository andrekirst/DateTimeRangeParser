# Erweiterte Dokumentation: https://www.appveyor.com/docs/appveyor-yml/

# Version festlegen
version: 1.0.{build}

clone_folder: c:\projects\DateTimeRangeParser

skip_branch_with_pr: false

# VM-Template fÃ¼r Visual Studio 2017
image: Visual Studio 2017

dotnet_csproj:
  patch: true
  file: '**\*.csproj;**\*.props'
  version: '{version}'
  package_version: $(appveyor_build_version)
  assembly_version: '{version}'
  file_version: '{version}'
  informational_version: '{version}'

platform: Any CPU
configuration: Release

cache:
  - packages -> **\packages.config

matrix:
  fast_finish: true

environment:
  deploymentfilename: ""
  nugetpkg: ""
  nuget_version: ""
  # nugetpkg: ""
  # SONARQUBE_TOKEN:
  #   secure: ACcdrpuhAnH8XDKRMUFdE4pjTH1vlH5LEvG0U5MDyuQYfDY3zjFXVzA0HLlmtQSq
  # CODECOV_TOKEN:
  #   secure: xD2Si76xwqwDjnJOB1w1SjTtiogJX9xn9fJbXXqlzyYAt3/32El2hxE3GW22Xu0X
  # COVERALLS_REPO_TOKEN:
    # secure: bfX6ISggSBc6AHPqmjFB4CG6xYnpU3mZbJEGtVvbd+XO16NZBd3IUeLvmFyCLhuC

install:
  # - choco install "msbuild-sonarqube-runner" -y
  # - choco install xunit -y
  # - choco install opencover.portable -y
  # - choco install codecov -y

before_build:
  - nuget restore c:\projects\DateTimeRangeParser\src\DateTimeRangeParser.sln

build_script:
  - ps: $env:nuget_version = $($env:appveyor_build_version)
  - ps: echo $env:nuget_version
  # - ps: MSBuild.SonarQube.Runner.exe begin /n:"WordCount" /k:"andrekirst:WordCount" /d:"sonar.organization=andrekirst-github" /d:"sonar.host.url=https://sonarcloud.io" /d:"sonar.login=$($env:SONARQUBE_TOKEN)" /v:"$($env:appveyor_build_version)" /d:"sonar.exclusions=**/AssemblyInfo.cs" /d:"sonar.branch.name=$env:APPVEYOR_REPO_BRANCH" /d:"sonar.dotnet.visualstudio.testProjectPattern=*.Tests" /d:sonar.cs.opencover.reportsPaths="$env:APPVEYOR_BUILD_FOLDER\opencovertests.xml" /d:sonar.cs.vstest.reportsPath="$env:APPVEYOR_BUILD_FOLDER\WordCount.Tests\bin\$env:CONFIGURATION\TestResults*.trx"
  - msbuild c:\projects\DateTimeRangeParser\src\DateTimeRangeParser.sln /property:Configuration=Release /t:Rebuild /verbosity:minimal
  # - dotnet build "c:\projects\DateTimeRangeParser\src\DateTimeRangeParser.sln"
  - dotnet test "c:\projects\DateTimeRangeParser\src\DateTimeRangeParser.Tests\DateTimeRangeParser.Tests.csproj"
  - dotnet pack C:\projects\DateTimeRangeParser\src\DateTimeRangeParser\DateTimeRangeParser.csproj -o c:\projects\DateTimeRangeParser\nuget_output -c Release /p:Version="$($env:nuget_version)"
  # - ps: OpenCover.Console.exe -register -target:"%xunit20%\xunit.console.x86.exe" -targetargs:"c:\projects\WordCount\WordCount.Tests\bin\Release\WordCount.Tests.dll -noshadow" -excludebyattribute:*ExcludeFromCodeCoverage* -filter:"+[*WordCount*]* -[*Tests*]*" -output:"c:\projects\WordCount\opencovertests.xml"
  # - ps: MSBuild.SonarQube.Runner.exe end /d:"sonar.login=$($env:SONARQUBE_TOKEN)"
  # - ps: codecov -f "c:\projects\WordCount\opencovertests.xml" -t $env:CODECOV_TOKEN

test:
  assemblies:
    - '**\*.Tests.dll'

after_build:
  - ps: if ($env:APPVEYOR_REPO_BRANCH -eq "master") { $env:deploymentfilename = "datetimerangeparser-$($env:appveyor_build_version).zip" }
  - ps: if ($env:APPVEYOR_PULL_REQUEST_NUMBER) { $env:deploymentfilename = "datetimerangeparser-$($env:appveyor_build_version)-PR$env:APPVEYOR_PULL_REQUEST_NUMBER.zip" }
  - ps: if ($env:APPVEYOR_REPO_BRANCH -like "feature*") { $env:deploymentfilename = "datetimerangeparser-$($env:appveyor_build_version)-unstable.zip" }
  - ps: New-Item -Type Directory -Path "$env:APPVEYOR_BUILD_FOLDER\output\"
  - ps: Copy-Item -Destination "$env:APPVEYOR_BUILD_FOLDER\output\" -Path "$env:APPVEYOR_BUILD_FOLDER\src\DateTimeRangeParser\bin\Release\*.*" -Recurse
  - ps: rm "$env:APPVEYOR_BUILD_FOLDER\output\*.pdb" -Recurse
  # - ps: rm "$env:APPVEYOR_BUILD_FOLDER\output\Autofac.xml" -Recurse
  - ps: 7z a $env:deploymentfilename "$env:APPVEYOR_BUILD_FOLDER\output\*.*" -r
  - ps: $env:nugetpkg = 'nuget_output\DateTimeRangeParser.$($env:nuget_version).nupkg'

# on_success:
#   - curl -s -o copilot https://copilot.blackducksoftware.com/ci/appveyor/scripts/upload
#   - bash copilot

artifacts:
  - path: $(deploymentfilename)
    name: datetimerangeparser
  - path: $(nugetpkg)
    name: nugetpackage

# deploy:
#   provider: NuGet
#   api_key:
#     secure: FgHRiTDaSEVn5P2wfCIs2u4J6a6t0zIxxqt2Rce/I5v7GE0QcDwLTP3MmSyHBrrA
#   skip_symbols: true
#   artifact: nugetpackage
