# Erweiterte Dokumentation: https://www.appveyor.com/docs/appveyor-yml/

# Version festlegen
version: 1.1.{build}

clone_folder: c:\projects\DateTimeRangeParser

skip_branch_with_pr: false

# VM-Template fÃ¼r Visual Studio 2017
image: Visual Studio 2017

skip_tags: true

dotnet_csproj:
  patch: true
  file: '**\*.csproj;**\*.props'
  version: '{version}'
  package_version: $(appveyor_build_version)
  assembly_version: '{version}'
  file_version: '{version}'
  informational_version: '{version}'

platform: Any CPU
configuration: Release

cache:
  - packages -> **\packages.config

matrix:
  fast_finish: true

environment:
  deploymentfilename: ""
  nugetpkg: ""
  nuget_version: ""

before_build:
  - nuget restore c:\projects\DateTimeRangeParser\src\DateTimeRangeParser.sln

build_script:
  - ps: $env:nuget_version = $($env:appveyor_build_version)
  - ps: echo $env:nuget_version
  - msbuild c:\projects\DateTimeRangeParser\src\DateTimeRangeParser.sln /property:Configuration=Release /t:Rebuild /verbosity:minimal
  - dotnet test "c:\projects\DateTimeRangeParser\src\DateTimeRangeParser.Tests\DateTimeRangeParser.Tests.csproj"
  - ps: dotnet pack C:\projects\DateTimeRangeParser\src\DateTimeRangeParser\DateTimeRangeParser.csproj -o c:\projects\DateTimeRangeParser\nuget_output -c Release /p:Version="$($env:nuget_version)"

test:
  assemblies:
    - '**\*.Tests.dll'

after_build:
  - ps: if ($env:APPVEYOR_REPO_BRANCH -eq "master") { $env:deploymentfilename = "datetimerangeparser-$($env:appveyor_build_version).zip" }
  - ps: if ($env:APPVEYOR_PULL_REQUEST_NUMBER) { $env:deploymentfilename = "datetimerangeparser-$($env:appveyor_build_version)-PR$env:APPVEYOR_PULL_REQUEST_NUMBER.zip" }
  - ps: if ($env:APPVEYOR_REPO_BRANCH -like "develop*") { $env:deploymentfilename = "datetimerangeparser-$($env:appveyor_build_version)-unstable.zip" }
  - ps: if ($env:APPVEYOR_REPO_BRANCH -like "release*") { $env:deploymentfilename = "datetimerangeparser-$($env:appveyor_build_version)-rc.zip" }
  - ps: if ($env:APPVEYOR_REPO_BRANCH -like "feature*") { $env:deploymentfilename = "datetimerangeparser-$($env:appveyor_build_version)-feature.zip" }
  - ps: New-Item -Type Directory -Path "$env:APPVEYOR_BUILD_FOLDER\output\"
  - ps: Copy-Item -Destination "$env:APPVEYOR_BUILD_FOLDER\output\" -Path "$env:APPVEYOR_BUILD_FOLDER\src\DateTimeRangeParser\bin\Release\*.*" -Recurse
  - ps: rm "$env:APPVEYOR_BUILD_FOLDER\output\*.pdb" -Recurse
  - ps: 7z a $env:deploymentfilename "$env:APPVEYOR_BUILD_FOLDER\output\*.*" -r
  - ps: $env:nugetpkg = "nuget_output\DateTimeRangeParser.$($env:nuget_version).nupkg"

artifacts:
  - path: $(deploymentfilename)
    name: datetimerangeparser
  - path: $(nugetpkg)
    name: nugetpackage

deploy:
  - provider: NuGet
    api_key:
      secure: FgHRiTDaSEVn5P2wfCIs2u4J6a6t0zIxxqt2Rce/I5v7GE0QcDwLTP3MmSyHBrrA
    skip_symbols: true
    artifact: nugetpackage
    on:
      branch: master
      # APPVEYOR_REPO_TAG: true

  - provider: GitHub
    tag: v$(appveyor_build_version)
    release: DateTimeRangeParser-v$(appveyor_build_version)
    description: 'DateTimeRangeParser'
    auth_token:
      secure: wd4vJnE6p08rDjENYsCDpKlmGFr702mrdu5bYAiRge1aRDnEH2sp3/id+AQxavMJ
    artifact: nugetpackage
    draft: false
    prerelease: false
    on:
      branch: master
      # APPVEYOR_REPO_TAG: true

  - provider: GitHub
    tag: v$(appveyor_build_version)-unstable
    release: DateTimeRangeParser-v$(appveyor_build_version)-unstable
    description: 'DateTimeRangeParser'
    auth_token:
      secure: wd4vJnE6p08rDjENYsCDpKlmGFr702mrdu5bYAiRge1aRDnEH2sp3/id+AQxavMJ
    artifact: nugetpackage
    draft: false
    prerelease: true
    on:
      branch: develop
      # APPVEYOR_REPO_TAG: true

  - provider: GitHub
    tag: v$(appveyor_build_version)-rc
    release: DateTimeRangeParser-v$(appveyor_build_version)-rc
    description: 'DateTimeRangeParser'
    auth_token:
      secure: wd4vJnE6p08rDjENYsCDpKlmGFr702mrdu5bYAiRge1aRDnEH2sp3/id+AQxavMJ
    artifact: nugetpackage
    draft: true
    prerelease: true
    on:
      branch: /release.*/
      # APPVEYOR_REPO_TAG: true
